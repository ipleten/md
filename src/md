#!/usr/bin/python

# md - a simple maildir command line user agent
# Copyright (C) 2010  Nic Ferrier <nic@ferrier.me.uk>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

"""
md - A maildir command line user agent.
"""

__author__ = "Nic Ferrier <nic@ferrier.me.uk>"
__version__ = 0.1

import os.path
import os
import sys
from mdlib import *

## This should be redefined as an option and a thread local
## Default value should come from an env var or be ~/Maildir
HOMEMAILDIR = os.path.join(os.environ["HOME"], "Maildir")
MAILDIR = os.path.expanduser(os.environ.get("MAILDIR", HOMEMAILDIR))
mdir = MdFolder(MAILDIR)

# Depends on cmdlin
import cmdln

class MdCLI(cmdln.Cmdln):
    name = "md"

    def do_ls(self, subcmd, opts, folder=""):
        """List messages in the specified folder"""
        client = MdClient(MAILDIR)
        client.ls(foldername=folder,stream=sys.stdout)

    def do_lisp(self, subcmd, opts, folder=""):
        """List messages in the specified folder in JSON format"""
        client = MdClient(MAILDIR)
        client.lisp(foldername=folder,stream=sys.stdout)

    def do_make(self, subcmd, opts, path):
        """Make a maildir at the specified path.

        If the path is relative then create under MAILDIR
        else create at the absolute location.
        """
        d = path[0] if path[0][0] == "/" else joinpath(MAILDIR, path[0])
        os.makedirs(joinpath(d, "cur"))
        os.makedirs(joinpath(d, "new"))
        os.makedirs(joinpath(d, "tmp"))

    def do_text(self, subcmd, opts, message):
        """Get the best text part of the specified message"""
        client = MdClient(MAILDIR)
        client.gettext(message, sys.stdout)

    def do_struct(self, subcmd, opts, message):
        """Get the structure of the specified message"""
        client = MdClient(MAILDIR)
        client.getstruct(message, sys.stdout)

    def do_shell(self, subcmd, opts):
        """Run a shell for md"""
        # TODO fix this because it's broken right now
        shell = MdCLI()
        mdcli.main(argv=[], loop=cmdln.LOOP_ALWAYS)

if __name__ == "__main__":
    mdcli = MdCLI()
    sys.exit(mdcli.main())

# End
